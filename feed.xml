<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stan Zonov</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 18 Jun 2019 12:09:33 -0700</pubDate>
    <lastBuildDate>Tue, 18 Jun 2019 12:09:33 -0700</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Completed my Masters</title>
        <description>&lt;p&gt;Hello everyone! I have completed my Masters of Mathematics at the University of Waterloo. It has been a very interesting experience. I have learned a lot over the past two years. My thesis can be found &lt;a href=&quot;https://uwspace.uwaterloo.ca/handle/10012/14740&quot;&gt;here&lt;/a&gt;. I’ll copy my abstract below and post it here to give one a good idea as to what my thesis is all about:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The algorithm used for determining sensor placement in this thesis will be based on the Kalman filter. This filter is very famous and its application are numerous - some examples include aircraft navigation, finance and weather forecasting. It is used to extract an estimate of the true state of a system based on noisy measurements. For linear systems, where the noise satisfies certain assumptions, the Kalman filter minimizes the expected squared error between the filter’s estimate and the true state of the system. By varying the sensor location, and therefore the observation matrix, one can further minimize the expected squared error to determine an optimal sensor placement. For linear systems, a regular as well as steady state Kalman filter are used for the sensor placement algorithm. This thesis examines this concept further, for nonlinear systems by using the Extended Kalman filter.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As mentioned in the abstract, the Kalman filter was a major part of my thesis. I have a nice github repository &lt;a href=&quot;https://github.com/mannyray/KalmanFilter&quot;&gt;here&lt;/a&gt;. Within my repository, I provided well documented algorithms of various Kalman filters. I’m very happy with how the repository turned out! The details in Chapter 3 of my thesis also describe the Kalman filter with additional sources listed.&lt;/p&gt;

&lt;p&gt;I learned over the course of my Masters that good explanations and books are rare. Over the course of my undergrad in computer science, I heard the joke that programming is just googling/stackoverflowing many, many, many times. It is true that there is a bit of that when learning new concepts or trying to quickly build something together for the first time. Everyone who has coded has done some sort of squirrel digging for nuts, scavenging online type action. Some concepts can indeed be found on some forum but some concepts cannot. In undergrad, basic sources in explaining concepts can be found very easily online. For example, are you taking linear algebra but cannot follow? There is a ton of resources as there are millions of people before you, with you, and after you that are learning how to compute the inverse of a matrix. Trying to apply the steady state Kalman filter for sensor placement research? Now there are fewer people working on this topic. If it is your first time in a niche topic then you need to do a fair bit of reading and thinking before understanding it. During a Masters you realize how informative some books/resources are versus others. A book commonly referenced by the fluids group was Fluid Mechanics by Kundu. There are many books on this topic, but this was a group favourite. But not just any edition… the first edition from 1990! I have many anecdotes of this kind. The result is that I now have a small collection of old but very good books.&lt;/p&gt;

&lt;p&gt;The collection, the finding, the analysis and understanding of resources is a very important concept learned throughout a Masters. The title that comes along with the Masters (math, science, art…) depends on the field where your research/knowledge can be applied. In my case, it was Mathematics. So now I am a Master….a Master of Mathematics. What does that even mean? Who are mathematicians anyway? I will not answer any of these questions but will leave you with the following passage from a good old book I now own (Mathematical Thought From Ancient To Modern Times - Morris Kline 1972):&lt;/p&gt;

&lt;p&gt;“&lt;em&gt;…a new group of humanists devoted themselves to collecting, organizing, and critically studying Greek and Roman learning. These men made assiduous studies, and with on the whole questionable sagacity strove to cleanse the texts of errors and to restore lost material…Though this activity may have aroused an interest in learning, it nevertheless fostered the deception that learning consisted in deepening and confirming the accepted body of knowledge.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Typical of the humanists of the sixteenth century was the algebraist Jerome Cardan (Geolamo Cardano), who was born in Pavia in 1501. His career as rogue and scholar is one of the most fascinating among the fantastic careers of Renaissance men. He gives an account of his life in his De Vita Propria (Book of My Life), written in his old age, in which he praises and abases himself. He says that his parents endowed him only with misery and scorn; he passed a wretched boyhood and was so poor for the first forty years of his life that he ceased to regard himself as poor because, as he put it, he had nothing left to lose. He was high-tempered, devoted to erotic pleasures, vindictive, quarrelsome, conceited, humorless, incapable of compunction, and purposely cruel in speech. Though he had no passion for gambling he played dice every day for twenty-five years and chess for forty years as an escape from poverty, chronic illnesses, calumnies, and injustices. In his Liber de Ludo Aleae (Book on Games of Chance), published posthumously in 1663, he says one should gamble for stakes to compensate for the time lost and he gives advice on how to cheat to ensure that compensation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;After devoting his youth to mathematics, astronomy, astrology, physics and gambling, he graduated from the University of Pavia in medicine. He practiced this art, later taught it in Milan and Bologna, and became celebrated all over Europe as a physician. He also served as professor of mathematics in several Italian universities. In 1570 he was sent to prison for the heresy of casting the horoscope of Jesus. Astonishingly, the pope subsequently hired him as an astrologer. At seventy-five, shortly before his death in 1576, he boasted of fame, a grandson, wealth, learning, powerful friends, belief in God and fourteen good teeth.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;His writing embraced mathematics, astronomy, astrology, physics, medicine, and an enormous variety of other subjects, including moral aphorisms (to atone for his cheating at cards). Despite much training in the sciences, Cardan was a man of his times; he firmly believed in astrology, dreams, charms, palmistry, portents, and superstitions, and wrote many volumes on these subjects. He is the rational apologist for the occult arts, which, he contended, permit as much certitude as do navigation and medicine. He also wrote encyclopedic treatises on the inhabitants of the universe, that is, angels, demons, and various intelligences, including in these books material undoubtedly stolen from his father’s distinguished friend. Leonardo da Vinci. The extant material fills about 7000 pages.&lt;/em&gt;”&lt;/p&gt;

&lt;p&gt;The hall way outside my office where I was during my masters:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/masters2.JPG&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The hallway was in the MC building:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/masters1.JPG&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 18 Jun 2019 05:00:00 -0700</pubDate>
        <link>http://localhost:4000/programming/2019/06/18/mathematician/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2019/06/18/mathematician/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Bifurcations</title>
        <description>&lt;p&gt;In this post I will discuss bifurcation.&lt;/p&gt;

&lt;p&gt;“In general, a small variation in some parameter produces small, continuous changes in the system output, so that the system is said to be structurally stable. However, for some specific parameter values, a small variation can induce a strong qualitivative change in the solution. Such a behavior is called a bifurcation, and the system is said to be structurally unstable for these parameter values.”[1]&lt;/p&gt;

&lt;p&gt;Consider the ordinary differential equation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x_t  = r x - x^3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; is the parameter of interest, subscript &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt; is the time derivative of &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;. An equilibrium of the system is a point where the system remains unchanged or equivalently&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x_t = 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In our case if &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; is greater than zero then there are three equilibriums:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x = 0, -root(r), + root(r)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We can plot the derivative &lt;code class=&quot;highlighter-rouge&quot;&gt;x_t&lt;/code&gt; against &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/bifurcations1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first equilibrium is unstable since a slight perturbation will cause to move away from it (similar to a ball on top of a hill being slightly pushed will roll away). It is unstable because if &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is slightly less than zero then the negative derivative (refer to previous plot) will cause &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; to decrease away from 0 and similarly if &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; is slightly greater than zero then the positive derivative will cause &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; to increase away from 0. Using similar logic the other two equilbiriums can be shown to be stable (a ball in a valley pushed will roll back).&lt;/p&gt;

&lt;p&gt;When &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; is less than or equal to zero there is only one equilibrium (&lt;code class=&quot;highlighter-rouge&quot;&gt;x=0&lt;/code&gt; which is stable). Once again we plot &lt;code class=&quot;highlighter-rouge&quot;&gt;x_t&lt;/code&gt; against &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/bifurcations2.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When varying &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; from negative to positive we move from one stable point to two stable points. &lt;code class=&quot;highlighter-rouge&quot;&gt;r=0&lt;/code&gt; is the bifurcation point where small variation  will cause strong qualititative change in the solution.&lt;/p&gt;

&lt;p&gt;Now let’s consider a more interesting system - the logistic map equation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;x_{t+1} = r x_{t} (1-x_{t})
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; is the parameter. We will restrict &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; to be in the range &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; (this provides that if &lt;code class=&quot;highlighter-rouge&quot;&gt;x_{n}&lt;/code&gt; is between 0 and 1 then &lt;code class=&quot;highlighter-rouge&quot;&gt;x_{n+1}&lt;/code&gt; will also be between 0 and 1 - can be checked via derivative tests). The logistic map reprents a population model where &lt;code class=&quot;highlighter-rouge&quot;&gt;x_{n}&lt;/code&gt; between &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; represents the percentage out of a total maximum possible population. Below are some sample populations for different &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; values&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/bifurcations3.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For &lt;code class=&quot;highlighter-rouge&quot;&gt;r=0.5&lt;/code&gt; the steady value is &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; meaning that the population starting at &lt;code class=&quot;highlighter-rouge&quot;&gt;x_{0} = 0.5&lt;/code&gt; will lead to population extinction (&lt;code class=&quot;highlighter-rouge&quot;&gt;x_{n} = 0&lt;/code&gt;). For &lt;code class=&quot;highlighter-rouge&quot;&gt;r=1.25&lt;/code&gt; the population reaches steady state of about &lt;code class=&quot;highlighter-rouge&quot;&gt;0.2&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;r=2.75&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;r=2&lt;/code&gt; also reach a single steady state. Now for &lt;code class=&quot;highlighter-rouge&quot;&gt;r=3.5&lt;/code&gt; things get interesting - there are now &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt; steady values about which the curve oscillates about regularly: &lt;code class=&quot;highlighter-rouge&quot;&gt;0.8269, 0.5009, 0.8750, 0.3828&lt;/code&gt;. By changing the parameter &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;2.75&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;3.5&lt;/code&gt; we have change the amount of steady values from &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt;. This leads us to plot a bifurcation diagram. Below the diagram plots for various &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; (Growth Rate) the steady values. For &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; less than &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; there is only one steady value and at about &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; (bifurcation point) we now have two steady points and once &lt;code class=&quot;highlighter-rouge&quot;&gt;r&lt;/code&gt; is about &lt;code class=&quot;highlighter-rouge&quot;&gt;3.5&lt;/code&gt; there are four (as demonstrated earlier).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/bifurcations4.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If we zoom in to a smaller range we see the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/bifurcations5.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and if we zoom in even further we start noticing a fractal type pattern emerging - same structure at every scale. From the simple logistic map equation we obtain a beautiful pattern.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/bifurcations4_5.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some of the code used to generate the figures, insipiration as well as additional reading material can be found here:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Boccaletti, Stefano, et al. Synchronization: From Coupled Systems to Complex Networks. Cambridge University Press, 2018&lt;/li&gt;
  &lt;li&gt;Boeing, Geoff. “Visual analysis of nonlinear dynamical systems: chaos, fractals, self-similarity and the limits of prediction.” Systems 4.4 (2016): 37.&lt;/li&gt;
  &lt;li&gt;https://www.math.ucdavis.edu/~hunter/m207/m207.pdf&lt;/li&gt;
  &lt;li&gt;https://github.com/gboeing/pynamical&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sun, 16 Dec 2018 12:00:00 -0800</pubDate>
        <link>http://localhost:4000/programming/2018/12/16/bifurcation/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2018/12/16/bifurcation/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Simple Scraper</title>
        <description>&lt;p&gt;This is something that I did a while ago but kept forgetting to post. I needed to build a web scaper of sorts that would save online data at certains times of the day. Since I did not have a desktop or my own server I needed to find a location for my scripts to run on their own. For this purpose I chose Amazon Web Service (AWS). At the time AWS provided a basic free EC2 instance (Amazon Elastic Compute Cloud). In Amazon’s owns words EC2 can be used ‘to launch as many or as few virtual servers as you need, configure security and networking, and manage storage’. Essentially it is a computer that runs nonstop and you connect to set and specify tasks for it to work on. For the example in this post I scraped the &lt;a href=&quot;https://github.com/uWaterloo/api-documentation/blob/master/v2/weather/current.md&quot;&gt;weather&lt;/a&gt; in Waterloo (I scrapped other stuff as well).&lt;/p&gt;

&lt;p&gt;This post will skip the details for setting up an EC2 instance. There are many good resources for that such as &lt;a href=&quot;&quot;&gt;here&lt;/a&gt;. The actual script for ‘scraping’ the data is simple:
The script for recording the weather:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;scrape.py&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/python
&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://api.uwaterloo.ca/v2/weather/current.json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status_code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#200 means everything is OK
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;json_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;current_temperature&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;temperature_current_c&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;#record temperature in file with current date
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'TZ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'America/New_York'&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;current_date_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Y_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;m_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d_&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;H.txt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;#files are stored in folder called data
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makedirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
				
	&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;data/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_date_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;a+&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_temperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;RuntimeError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;API request failed.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A response is obtained from api.uwaterloo.ca which contains all sorts of weather data. Only the current temperature in celcius is saved in a file with format &lt;code class=&quot;highlighter-rouge&quot;&gt;%Y_%m_%d_%H.txt&lt;/code&gt; in directory &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt;. Let’s assume your script is running on this instance scraping data on a daily basis. What if something goes wrong? A very easy/rough (not best) solution uses my previous &lt;a href=&quot;http://szonov.com/programming/2017/07/16/Creating-a-notification/&quot;&gt;post&lt;/a&gt; describing how to send yourself an email by using curl. This leads to the following error handling, wrapper script:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;dailyScript.sh&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#assuming scrape.py is located in /home/ec2-user&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/ec2-user

&lt;span class=&quot;c&quot;&gt;#if scrape.py crashes then we can check for error in error_file.txt&lt;/span&gt;
/usr/bin/python scrape.py 2&amp;gt;&amp;gt;error_file.txt

&lt;span class=&quot;c&quot;&gt;#if file is present and has size greater than zero&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; error_file.txt  &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#if the file is not empty then we must alert the server that something is wrong&lt;/span&gt;
	curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://script.google.com/macros/s/some_sort_of_id/exec?subject=SERVER_ERROR&amp;amp;message=AWS_SCRIPT_HAS_CRASHED_NEED_TO_FIX_INFO&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#backup and communicate that everything is OK&lt;/span&gt;
	curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://script.google.com/macros/s/some_sort_of_id/exec?subject=Working&amp;amp;message=Everything_is_working&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once an error happens for the first time then you will be emailed until you fix the error (and &lt;code class=&quot;highlighter-rouge&quot;&gt;rm error_file.txt&lt;/code&gt;). However, this if-else does not catch the error of the &lt;code class=&quot;highlighter-rouge&quot;&gt;dailyScript.sh&lt;/code&gt; not running in the first place. Now, let’s add the additional feauture of backing up our scraped results. A nice of doing this (for small amounts of data) involves using a private Github repository. First you need to allow your EC2 to connect to github without entering your password. Within your EC2 instance:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd ~
$ ssh-keygen -t rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(and press enter all the way through). Go to &lt;code class=&quot;highlighter-rouge&quot;&gt;github.com &amp;gt; settings&lt;/code&gt; and copy the contents of your &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.ssh/id_rsa.pub&lt;/code&gt; into the field labeled ‘Key’. Then on the EC2:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git remote set-url origin git+ssh://git@github.com/username/insert_your_repo_name.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;where &lt;code class=&quot;highlighter-rouge&quot;&gt;insert_your_repo_name&lt;/code&gt; is a private repo you will make on github.com. Next modify &lt;em&gt;dailyScript.sh&lt;/em&gt; to push/backup the newly added &lt;code class=&quot;highlighter-rouge&quot;&gt;%Y_%m_%d_%H.txt&lt;/code&gt; file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /home/ec2-user/insert_your_repo_name

&lt;span class=&quot;c&quot;&gt;#if scrape.py crashes then we can check for error in error_file.txt&lt;/span&gt;
/usr/bin/python scrape.py 2&amp;gt;error_file.txt

&lt;span class=&quot;c&quot;&gt;#if file is present and has size greater than zero&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; error_file.txt  &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#if the file is not empty then we must alert the server that something is wrong&lt;/span&gt;
	curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://script.google.com/macros/s/some_sort_of_id/exec?subject=SERVER_ERROR&amp;amp;message=AWS_SCRIPT_HAS_CRASHED_NEED_TO_FIX_INFO&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#backup and communicate that everything is OK&lt;/span&gt;
	git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
	git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;backup&quot;&lt;/span&gt;
	git push
	curl &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://script.google.com/macros/s/some_sort_of_id/exec?subject=Working&amp;amp;message=Everything_is_working&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;(where &lt;em&gt;scrape.py&lt;/em&gt; and &lt;em&gt;dailyScript.sh&lt;/em&gt; are located within &lt;code class=&quot;highlighter-rouge&quot;&gt;insert_your_repo_name&lt;/code&gt;). All that is left to do is make sure the scripts run and records the weather at set hours of the day everyday. Let’s say that you are interested in recording the weather every day at 0000,0600,1200,1800 then you would have to call &lt;code class=&quot;highlighter-rouge&quot;&gt;dailyScript.sh&lt;/code&gt; at those times. This can be done using &lt;code class=&quot;highlighter-rouge&quot;&gt;crontab&lt;/code&gt;. In your EC2 instance you run&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ crontab -e
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and enter&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CRON_TZ=America/New_York
0 0,6,12,18 * * * cd /home/ec2-user/insert_your_repo_name; ./dailyScript.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;(don’t forget to &lt;code class=&quot;highlighter-rouge&quot;&gt;chmod u+x dailyScript.sh&lt;/code&gt;). You have now created a scraper that runs on its own that backups the data with emails if there is something wrong.&lt;/p&gt;

&lt;h2 id=&quot;bonus-content&quot;&gt;Bonus content&lt;/h2&gt;

&lt;p&gt;Let’s assume the scraper has already been running for a while. And you now want to analyse the temperature results on local. We will do this using mysql:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install mysql-server
$ mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Create file &lt;em&gt;createTable.sql&lt;/em&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weather_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weather_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;YEAR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MONTH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DAY&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEMPERATURE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DOUBLE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and run in order to create table organize the temperature data&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo mysql &amp;lt; createTable.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now clone the repository and cd into the directory with all the &lt;code class=&quot;highlighter-rouge&quot;&gt;%Y_%m_%d_%H.txt&lt;/code&gt; files and run the following script to fill the table:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;loadData.sh&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;file &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;data/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt
&lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
	&lt;span class=&quot;c&quot;&gt;#echo $file&lt;/span&gt;
		
	&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt; | &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;temperature&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do
		&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;##*/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%.txt&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'_'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{print $1, $2, $3, $4}'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[0]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[1]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[2]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;hour&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[3]&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;USE weather_data;INSERT INTO temperature_waterloo (YEAR,MONTH,DAY,HOUR,TEMPERATURE,ID) VALUES (&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$year&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$month&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$day&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hour&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$temperature&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,'&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;');&quot;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mysql 

&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and run &lt;code class=&quot;highlighter-rouge&quot;&gt;./loadData.sh&lt;/code&gt;. Now we have the data loaded and can run some queries:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weather_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;mi&quot;&gt;900&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;----------+&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-sql&quot; data-lang=&quot;sql&quot;&gt;&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+-------+-----+------+-------------+---------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;YEAR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MONTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DAY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEMPERATURE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+-------+-----+------+-------------+---------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;         &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_03_01_18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+-------+-----+------+-------------+---------------+&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;temperature_waterloo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+-------+-----+------+-------------+---------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;YEAR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;MONTH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DAY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HOUR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TEMPERATURE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ID&lt;/span&gt;            &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+-------+-----+------+-------------+---------------+&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;     &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_07_19_18&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;------+-------+-----+------+-------------+---------------+&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The scraper ran from 2017/07/19 18:00 to 2018/03/01 18:00. Using similar queries we find the max temperature in this time period was 30.3 celcius and min temperature was -28.5. You can obviously do more complicated stuff with more interesting scraped data sets. This post was meant to show an ad-hoc way of scraping data that will remove the task of writing the scraper and will just let you focus on the data you are interested in.&lt;/p&gt;

</description>
        <pubDate>Thu, 06 Dec 2018 17:00:00 -0800</pubDate>
        <link>http://localhost:4000/programming/2018/12/06/simple-scraper/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2018/12/06/simple-scraper/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Simulation</title>
        <description>&lt;p&gt;Here is a neat simulation I ran recently (play with double speed).&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/vXwqjX3IU18&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;It is  based on the following equations:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/equations.png&quot; alt=&quot;equations&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and with inspiration from &lt;a href=&quot;http://geoffboeing.com/2016/12/animating-lorenz-attractor-python/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Mar 2018 15:00:00 -0800</pubDate>
        <link>http://localhost:4000/programming/2018/03/01/simulation/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2018/03/01/simulation/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Gallery Test</title>
        <description>
</description>
        <pubDate>Tue, 26 Dec 2017 16:00:00 -0800</pubDate>
        <link>http://localhost:4000/photos/2017/12/26/gallery-test/</link>
        <guid isPermaLink="true">http://localhost:4000/photos/2017/12/26/gallery-test/</guid>
        
        
        <category>photos</category>
        
      </item>
    
      <item>
        <title>Creating a Notification</title>
        <description>&lt;p&gt;Are you running some code that takes a long time to finish? Want to know exactly when it is done?&lt;/p&gt;

&lt;p&gt;Are you running some cron job? Want to know when some specific event occurs?&lt;/p&gt;

&lt;p&gt;Want to know via email?&lt;/p&gt;

&lt;p&gt;A simple way to solve your questions is to use Google App Script and create a web app:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Open up your Google Drive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a new Google App Script called &lt;code class=&quot;highlighter-rouge&quot;&gt;AlertMessage&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Add the code to &lt;code class=&quot;highlighter-rouge&quot;&gt;code.gs&lt;/code&gt;
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; function doGet(request) {
     MailApp.sendEmail(&quot;your@gmail.com&quot;, request.parameter.subject, request.parameter.message);
     var result = {
         sent: 0 == 0
     };
     return ContentService.createTextOutput(JSON.stringify(result))
 }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Where &lt;code class=&quot;highlighter-rouge&quot;&gt;your@gmail.com&lt;/code&gt; is your Google email account on which you made the Google App Script.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Publish &amp;gt; Deploy as web app...&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Who has access to the app:&lt;code class=&quot;highlighter-rouge&quot;&gt;Anyone, even anonymous&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Press &lt;code class=&quot;highlighter-rouge&quot;&gt;Deploy&lt;/code&gt; and give the appropriate permissions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copy the full current web app URL: &lt;code class=&quot;highlighter-rouge&quot;&gt;https://script.google.com/macros/s/.../exec&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;...&lt;/code&gt; is the Google generated portion)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;On your computer terminal you can now send notifications via:
    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; curl -L &quot;https://script.google.com/macros/s/.../exec?subject=TITLE&amp;amp;message=UNDERSCORE_FOR_SPACES_INSIDE_MESSAGE&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;which will cause your Gmail inbox to get a new message.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a very simple script that can be modified to do some really neat stuff. Hope this helps.&lt;/p&gt;

</description>
        <pubDate>Sun, 16 Jul 2017 15:00:00 -0700</pubDate>
        <link>http://localhost:4000/programming/2017/07/16/Creating-a-notification/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2017/07/16/Creating-a-notification/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Beautiful 3 Set</title>
        <description>&lt;p&gt;I was on hackerrank the other day trying to solve &lt;a href=&quot;https://www.hackerrank.com/challenges/beautiful-3-set&quot;&gt;‘Beautiful 3 Set’&lt;/a&gt;. The problem goes like this:&lt;/p&gt;

&lt;p&gt;You are given an integer &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;. A set, &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt;, of triples &lt;code class=&quot;highlighter-rouge&quot;&gt;(x_i, y_i, z_i)&lt;/code&gt; is beautiful if and only if:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0 &amp;lt;= x_i, y_i, z_i&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x_i + y_i + z_i = n&lt;/code&gt;, For all &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; such that &lt;code class=&quot;highlighter-rouge&quot;&gt;1 &amp;lt;= i &amp;lt;= |S|&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Let X be the set of different &lt;code class=&quot;highlighter-rouge&quot;&gt;x_i&lt;/code&gt;’s in S, Y be the set of different &lt;code class=&quot;highlighter-rouge&quot;&gt;y_i&lt;/code&gt;’s in S, and Z be the set of different &lt;code class=&quot;highlighter-rouge&quot;&gt;z_i&lt;/code&gt; in S. Then &lt;code class=&quot;highlighter-rouge&quot;&gt;|X| = |Y| = |Z| = |S|&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The third condition means that all &lt;code class=&quot;highlighter-rouge&quot;&gt;x_i&lt;/code&gt;’s are pairwise distinct. The same goes for &lt;code class=&quot;highlighter-rouge&quot;&gt;y_i&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z_i&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Problem: Given &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;, find any beautiful set having maximum number of elements. Then print the cardinality of &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; on a new line, followed by &lt;code class=&quot;highlighter-rouge&quot;&gt;|S|&lt;/code&gt; lines where each line contains 3 space-separated integers describing the respective values of &lt;code class=&quot;highlighter-rouge&quot;&gt;x_i&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;y_i&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z_i&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Input Format:&lt;/p&gt;

&lt;p&gt;A sample integer, n. (1 &amp;lt;= n &amp;lt;= 300)&lt;/p&gt;

&lt;h1 id=&quot;solution&quot;&gt;Solution&lt;/h1&gt;

&lt;p&gt;The solution to this problem is not obvious. Writing out the testcases for the first few &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; is difficult for verification and the questions of uniqueness for each &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; comes up. Is there a quick and easy way of coming up with the solution without having to brute force? The answer to the question is &lt;em&gt;yes&lt;/em&gt;, because otherwise hackerrank will reject the slow solution. There must be a quick solution and we shall find it (not always the case in general).&lt;/p&gt;

&lt;p&gt;At this point I had no real intuition on the problem and decided to brute force the problem first. For the brute force approach, a basic outline of the strategy is to come up with all potential &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; sets and store the largest ones of them for each &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;. We don’t know if these &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; sets are unique(excluding column &lt;code class=&quot;highlighter-rouge&quot;&gt;-(x|y|z)&lt;/code&gt; switching) for a given &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; so we will have to store them all. Now let’s get into the specifics of our strategy:&lt;/p&gt;

&lt;p&gt;For each &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; we will store all &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; that satisfy the first three conditions described in the problem description. To generate a single &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt;, we need some sort of global set to choose from. In other words, we need to generate all valid &lt;code class=&quot;highlighter-rouge&quot;&gt;(x_i, y_i, z_i)&lt;/code&gt; triples as our basis. Each &lt;code class=&quot;highlighter-rouge&quot;&gt;(x|y|z)_i&lt;/code&gt; is a number from &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; (inclusive) and the triplets thus can be generated using a nested for loop with indexes &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; (once you know the first two numbers then you know the last &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; number since &lt;code class=&quot;highlighter-rouge&quot;&gt;x+y+z=n&lt;/code&gt;). This gives an upper bound of &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n^2)&lt;/code&gt; pairs.&lt;/p&gt;

&lt;p&gt;Once you have generated all the possible triplets and have filtered all the invalid ones out by the second condition, then you can start generating potential &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; candidates. For any given set &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt;, each existing triplet in the basis is either in &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; or not ~ a binary choice. The binary choice is a good hint on some sort of recursive approach. By checking all potential &lt;code class=&quot;highlighter-rouge&quot;&gt;S&lt;/code&gt; our runtime for this will be &lt;code class=&quot;highlighter-rouge&quot;&gt;O(2^{|triplet_basis_set_size})&lt;/code&gt; which has an upper bound. Definitely won’t work for &lt;code class=&quot;highlighter-rouge&quot;&gt;n=300&lt;/code&gt; on hackerrank.&lt;/p&gt;

&lt;p&gt;Thus the runtime of our brute force approach is &lt;code class=&quot;highlighter-rouge&quot;&gt;O(2^{n^2})&lt;/code&gt; (it is easy to optimize the brute force algorithm… but it would still be too slow for hackerrank). That is crazy slow! This is why we are doing this brute force approach on our machine and not hackerrank. Here is the brute force code:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;iostream&amp;gt;
#include &amp;lt;fstream&amp;gt;
#include &amp;lt;sstream&amp;gt;

using namespace std;

int n_limit = 20;

bool is_file_exist(const char *fileName){
    std::ifstream infile(fileName);
    return infile.good();
}


/*
x,y,z array are responsible for storing the basis of triples from which we select
The ith indeces of these arrays contain the ith triple.

index represents the current index we are looking at in our recursive binary method

//curNum is the current number we are processing (from n_limit)
this is useful for file writing/appending
*/
int generatingS(int * x,int * y,int * z,int index,int arrLength, int *x_cov, int *y_cov, int *z_cov, int max, int curNum){
	
	//not enough space left to maximize set
	//TODO: implement this feature

	if(index==arrLength){
		//we reached the bottom. check the set size by counting x_cov
		//and returning that number 
		int size=0;
		for(int i = 0; i &amp;lt; curNum+1; i++){
			if(x_cov[i]!=0){
				size++;
			}
		}
		if(max &amp;gt; size){//current entry is not bigger
			return max;
		}			
		//write it to file
		
		std::ofstream outfile;

		stringstream ss;
		ss&amp;lt;&amp;lt;curNum&amp;lt;&amp;lt;&quot;.txt&quot;;
		
		outfile.open(ss.str(), std::ios_base::app);
		outfile&amp;lt;&amp;lt;size&amp;lt;&amp;lt;endl;
		for(int i = 0; i &amp;lt; curNum+1; i++){
			if(x_cov[i]!=0){//output out all the pairs
				outfile&amp;lt;&amp;lt;x[x_cov[i]-1]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;y[x_cov[i]-1]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;z[x_cov[i]-1]&amp;lt;&amp;lt;endl;
			}
		}outfile&amp;lt;&amp;lt;endl;

		
		return size;
	}
	

	//assume that (x[index], y[index], z[index]) is in S
	//in order to make this assumption valid we need to check if 
	//(x|y|z)[index] has already been tagged in (x|y|z)_cov[(x|y|z)[index]]
	//This is an optimization that says if this triplet can't possibly be
	//part of the solution the don't recurse further with assumption that it is
	//part of solution
	if(x_cov[x[index]]==0&amp;amp;&amp;amp;y_cov[y[index]]==0&amp;amp;&amp;amp;z_cov[z[index]]==0){
		//tag so that inner layers of recursion now that the numbers in triplet
		//are in use
		x_cov[x[index]]=index+1;
		y_cov[y[index]]=index+1;
		z_cov[z[index]]=index+1;
		max = generatingS(x,y,z,index+1,arrLength,x_cov,y_cov,z_cov,max,curNum);
		
		//untag the values
		x_cov[x[index]]=0;
		y_cov[y[index]]=0;
		z_cov[z[index]]=0;
	}
	
	//assume that (x[index], y[index], z[index]) is not in S
	max = generatingS(x,y,z,index+1,arrLength,x_cov,y_cov,z_cov,max,curNum);
	return max;
}


int main(){
	for(int n = 2; n &amp;lt;= n_limit; n++){
		cout&amp;lt;&amp;lt;n&amp;lt;&amp;lt;endl;
		int index = 0;
		int upperBound = n*n;
		int * basis_x = new int[upperBound];
		int * basis_y = new int[upperBound];
		int * basis_z = new int[upperBound];
		//first generate the triplet basis
		//(since i,j,k start at zero then condition 1 auto satisfied) 
		for(int i = 0; i &amp;lt;= n; i++){
			for(int j = 0; j &amp;lt;= n-i; j++){
				int k = n-j-i;
				//satifies condition 2: add to our basis
				basis_x[index] = i;
				basis_y[index] = j;
				basis_z[index] = k;
				//cout&amp;lt;&amp;lt;i&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;j&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;k&amp;lt;&amp;lt;endl;
				index++;	
			}
		}cout&amp;lt;&amp;lt;index&amp;lt;&amp;lt;endl&amp;lt;&amp;lt;endl;//continue;
		
		//output all pairs
		//for(int i = 0; i &amp;lt; index; i++){
			//cout&amp;lt;&amp;lt;basis_x[index]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;basis_y[index]&amp;lt;&amp;lt;&quot; &quot;&amp;lt;&amp;lt;basis_z[index]&amp;lt;&amp;lt;endl;
		//}
		
		
		//we now have our basis and we can now generate all S
		int *x_cov = new int[n+1];
		int *y_cov = new int[n+1];
		int *z_cov = new int[n+1];
		for(int i = 0; i &amp;lt;= n; i++){
			x_cov[i] = 0;
			y_cov[i] = 0;
			z_cov[i] = 0;
		}
		generatingS(basis_x,basis_y,basis_z,0,index,x_cov,y_cov,z_cov,0,n);
		
		
		delete [] basis_x;
		delete [] basis_y;
		delete [] basis_z;
		delete [] x_cov;
		delete [] y_cov;
		delete [] z_cov;
	}
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I only had the patience to run up to &lt;code class=&quot;highlighter-rouge&quot;&gt;n = 17&lt;/code&gt;. I observed that there were many sets of max &lt;code class=&quot;highlighter-rouge&quot;&gt;|S|&lt;/code&gt; stored for each &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;. Given the way the basis was derived and the recursive function ran, I decided to only filter for the first max &lt;code class=&quot;highlighter-rouge&quot;&gt;|S|&lt;/code&gt; printed for each &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;. Here are the first for &lt;code class=&quot;highlighter-rouge&quot;&gt;n=2&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;n=17&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;n=2:
2
0 0 2
1 1 0
n=3:
3
0 1 2
1 2 0
2 0 1
n=4:
3
0 0 4
1 1 2
2 2 0
n=5:
4
0 0 5
1 2 2
2 3 0
3 1 1

n=6:
5
0 2 4
1 3 2
2 4 0
3 0 3
4 1 1

n=7:
5
0 0 7
1 1 5
2 3 2
3 4 0
4 2 1

n=8:
6
0 0 8
1 3 4
2 4 2
3 5 0
4 1 3
5 2 1

n=9:
7
0 3 6
1 4 4
2 5 2
3 6 0
4 0 5
5 1 3
6 2 1

n=10:
7
0 0 10
1 1 8
2 4 4
3 5 2
4 6 0
5 2 3
6 3 1

n=11:
8
0 0 11
1 4 6
2 5 4
3 6 2
4 7 0
5 1 5
6 2 3
7 3 1

n=12:
9
0 4 8
1 5 6
2 3 7
3 7 2
4 8 0
5 6 1
6 1 5
7 2 3
8 0 4

n=13:
9
0 0 13
1 1 11
2 5 6
3 6 4
4 7 2
5 8 0
6 2 5
7 3 3
8 4 1

n=14:
10
0 0 14
1 5 8
2 6 6
3 4 7
4 8 2
5 9 0
6 7 1
7 2 5
8 3 3
9 1 4

n=15:
11
0 5 10
1 6 8
2 4 9
3 7 5
4 9 2
5 10 0
6 8 1
7 1 7
8 3 4
9 0 6
10 2 3

n=16:
11
0 0 16
1 1 14
2 6 8
3 7 6
4 5 7
5 9 2
6 10 0
7 8 1
8 3 5
9 4 3
10 2 4

n=17:
12
0 0 17
1 6 10
2 7 8
3 5 9
4 8 5
5 10 2
6 11 0
7 9 1
8 2 7
9 4 4
10 1 6
11 3 3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;This once again does not tell us much other than the fact that there exists a combination with max&lt;/td&gt;
      &lt;td&gt;S&lt;/td&gt;
      &lt;td&gt;such that the &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;’s can be ordered from &lt;code class=&quot;highlighter-rouge&quot;&gt;0&lt;/code&gt; to some sort of limit. Is it guaranteed that for all n the &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt;’s can be ordered? We will assume for now that the answer is yes. The pattern for the &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; are not clear either. I decided to treat &lt;code class=&quot;highlighter-rouge&quot;&gt;y-z&lt;/code&gt; row values as coordinates on a &lt;code class=&quot;highlighter-rouge&quot;&gt;y-z&lt;/code&gt; plane and plot them. Here is a plot for &lt;code class=&quot;highlighter-rouge&quot;&gt;n=9&lt;/code&gt;:&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;-&lt;/th&gt;
      &lt;th&gt;0&lt;/th&gt;
      &lt;th&gt;1&lt;/th&gt;
      &lt;th&gt;2&lt;/th&gt;
      &lt;th&gt;3&lt;/th&gt;
      &lt;th&gt;4&lt;/th&gt;
      &lt;th&gt;5&lt;/th&gt;
      &lt;th&gt;6&lt;/th&gt;
      &lt;th&gt;7&lt;/th&gt;
      &lt;th&gt;8&lt;/th&gt;
      &lt;th&gt;9&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;0&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;4&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;2&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;9&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;8&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;7&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;6&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;8&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;9&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;17&lt;/td&gt;
      &lt;td&gt;18&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The rows and column labels represent different potential values for &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; (first col is &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; values and first row is &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; values), the entries on &lt;code class=&quot;highlighter-rouge&quot;&gt;(y,z)&lt;/code&gt; coordinates is the sum: &lt;code class=&quot;highlighter-rouge&quot;&gt;y+z&lt;/code&gt;. This is done because as the &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; column values increase one by one then, by definition, the sum of the &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; entry must decrease by one. This can be observed visually on the graph as each highlighted number is unique. In addition, we know that all numbers in the &lt;code class=&quot;highlighter-rouge&quot;&gt;x&lt;/code&gt; column are unique and therefore the values in the &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; columns must also be unique. Graphically, this translates to no row or column having more than one circled number and the equal sum present in each (anti) diagonal corresponds to a specific x value since &lt;code class=&quot;highlighter-rouge&quot;&gt;x+y+z=n&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We thus have translated our problem to a different, more visual one. Our translation is somewhat similar to the &lt;a href=&quot;https://en.wikipedia.org/wiki/Eight_queens_puzzle&quot;&gt;Eight(N) queens puzzle&lt;/a&gt;: no highlighted-number/queen can appear in the same column/row/(antidiagonal) on the matrix/chessboard with no pieces below the main &lt;code class=&quot;highlighter-rouge&quot;&gt;y+z=n&lt;/code&gt; diagonal. This translation gives us more insight into the restrictions on the values in the triplets and really drives the point home that this problem is only in terms of &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If we go back and plot from &lt;code class=&quot;highlighter-rouge&quot;&gt;n=2&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;n=18&lt;/code&gt; then one notices there is no pattern amongst the different &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;’s and no natural way to build up the solution. This is slightly disappointing because the printed &lt;code class=&quot;highlighter-rouge&quot;&gt;n=&lt;/code&gt; results were the first from max &lt;code class=&quot;highlighter-rouge&quot;&gt;|S|&lt;/code&gt; found in the brute force code. The hope is that by recording the first result, we would have had caught some sort of relation between the different &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nonetheless, we know what the &lt;code class=&quot;highlighter-rouge&quot;&gt;|S|&lt;/code&gt; size is and have a very simple visual way of coming up with new potential solutions. The simple solution for all &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; followed the &lt;code class=&quot;highlighter-rouge&quot;&gt;n=9&lt;/code&gt; pattern (after playing around a bit with the different ‘n-chessboard’ it becomes clear). There are two diagonal like lines. Bottom one starts (bottom-left) at some number (for &lt;code class=&quot;highlighter-rouge&quot;&gt;n=9&lt;/code&gt; it is &lt;code class=&quot;highlighter-rouge&quot;&gt;(y,z)=(6,0)&lt;/code&gt;) and the consecutive entries in diagonal like line are located at &lt;code class=&quot;highlighter-rouge&quot;&gt;(y-1, z+2)&lt;/code&gt; all the way up until &lt;code class=&quot;highlighter-rouge&quot;&gt;y+z=n&lt;/code&gt;. The top diagonal like line starts with &lt;code class=&quot;highlighter-rouge&quot;&gt;y'=y-1&lt;/code&gt; from previous &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; when &lt;code class=&quot;highlighter-rouge&quot;&gt;y+z=n&lt;/code&gt;. The first(left-bottom most) &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; for top diagonal is &lt;code class=&quot;highlighter-rouge&quot;&gt;z=1&lt;/code&gt;. Top diagonal increases in same fashion as bottom one until bounds of ‘chessboard’ are hit.&lt;/p&gt;

&lt;p&gt;Our solution now does not depend on &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;z&lt;/code&gt; but on the left most number of the bottom row. If you plot out the ‘chessboards’ for first 10 &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt;, then when will notice that the pattern is &lt;code class=&quot;highlighter-rouge&quot;&gt;mod 3&lt;/code&gt; and thus the &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n)&lt;/code&gt; solution is formed:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;cmath&amp;gt;
#include &amp;lt;cstdio&amp;gt;
#include &amp;lt;vector&amp;gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;algorithm&amp;gt;
using namespace std;


int main() {
    int n;cin&amp;gt;&amp;gt;n;
    
    int pairCount = 0;
    vector &amp;lt;int&amp;gt; x_y_zPairsOrdered;
    int y=0,z=0,x=0;
    if(n%3==0){
        y=(2*n)/3 ; 
    }
    else if(n%3==1){
        y=(2*n - 2) /3 ;
    }
    else{//n%3==2
        y=( 2*n-1 )/3;
    }
    
    //bottom diagonal from left to right
    do{
        x=n-y-z;
        x_y_zPairsOrdered.push_back(x);
        x_y_zPairsOrdered.push_back(y);
        x_y_zPairsOrdered.push_back(z);
        y-=1;
        z+=2;
        pairCount++;
    }while(y+z &amp;lt;= n);
    
    //upper diagonal from left to right
    z=-1;
    for(;y &amp;gt;= 0;y--){
        z+=2;
        x=n-z-y;
        pairCount++;
        x_y_zPairsOrdered.push_back(x);
        x_y_zPairsOrdered.push_back(y);
        x_y_zPairsOrdered.push_back(z);
    }
    
    
    //output:
    cout&amp;lt;&amp;lt;pairCount&amp;lt;&amp;lt;endl;
    for(int i = 0; i &amp;lt; pairCount; i++){
        cout&amp;lt;&amp;lt;x_y_zPairsOrdered[i*3]&amp;lt;&amp;lt;&quot; &quot;;
        cout&amp;lt;&amp;lt;x_y_zPairsOrdered[i*3+1]&amp;lt;&amp;lt;&quot; &quot;;
        cout&amp;lt;&amp;lt;x_y_zPairsOrdered[i*3+2]&amp;lt;&amp;lt;&quot; &quot;;
        cout&amp;lt;&amp;lt;endl;
    }
    
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;The main idea I wanted to push in this article is that in order to solve complex problems such as the ones present in hackerrank, it is OK to take a two step approach and brute it on your machine first. It is OK to try a stupid solution first. It is all about discovery.&lt;/p&gt;

&lt;p&gt;Sometimes it is sufficient to simply work through some examples by hand to notice a pattern when solving these problems. However, sometimes that can be difficult to do and verify correctness of and a two step solution can help crack the problem.&lt;/p&gt;

&lt;p&gt;Unfortunately, this tip is not the silver/magic bullet to solving ‘Hard’ problems on hackerrank. Oftentimes, the input to the problem is hard to formulate to begin with (like some graph with complex properties). In our case, we were just given a number n, which is easy to generate as input and easy to generate potential output for and test for correctness. Nonetheless, this approach gave me the opportunity to solve the problem by myself and learn something new during the process. That is always welcome.&lt;/p&gt;

</description>
        <pubDate>Fri, 14 Jul 2017 13:44:00 -0700</pubDate>
        <link>http://localhost:4000/programming/2017/07/14/Beautiful-3-set/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2017/07/14/Beautiful-3-set/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Some graphs</title>
        <description>&lt;p&gt;I was looking for sets of data to play around with and I came across the &lt;a href=&quot;http://www.wrps.on.ca/inside-wrps/corporate-planning-systems&quot;&gt;Waterloo Regional Police Service&lt;/a&gt; data that is available to the public. I created some graphs of the data for the reader to check out. The data was filtered for vehicle stops for the year 2015. Time and location data was plotted. If you are interested in the scripts used in generating the plots, then let me know.&lt;/p&gt;

&lt;p&gt;The following image contains a sort of histogram that placed the stops in bins based on their time of day occurence in a 24 hour time span.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/average_day_frequency.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next image is similar to the previous one, except now it places the stops in bins based on the day of the year in a one year span.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/year_frequency.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next few images are of the location based frequency of vehicle stops based on an entire year.&lt;/p&gt;

&lt;h6 id=&quot;tri-city-area&quot;&gt;Tri-city area:&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/location.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;waterloo-area&quot;&gt;Waterloo area:&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/waterloo_zoom.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h6 id=&quot;cambridge-area&quot;&gt;Cambridge area:&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/cambridge_zoom.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It can be hard to appreciate the number of stops done throughout the year by looking at the maps or previous histograms. The actual number of stops is over 40000. I will let the user make ‘conclusions’ on their own. The purpose of the post was not for analysis but instead for a small example of visualization and turning a huge csv file into a some neat graphs and plots. I will also provide the disclaimer for the users to go to the &lt;a href=&quot;http://www.wrps.on.ca/inside-wrps/corporate-planning-systems&quot;&gt;Waterloo Regional Police Service&lt;/a&gt; website if they want to learn more about the data and its limits.&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Mar 2017 17:27:00 -0700</pubDate>
        <link>http://localhost:4000/programming/2017/03/14/Some-graphs/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2017/03/14/Some-graphs/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Pendulums and automation</title>
        <description>&lt;p&gt;There will be two topics to this post. The first one will be about pendulums and the second one will be about automation. The topics aren’t related, but I put them together anyways. I hope you enjoy reading about them!&lt;/p&gt;

&lt;h2 id=&quot;pendulums&quot;&gt;Pendulums&lt;/h2&gt;

&lt;p&gt;Up to this current point, I have taken a few courses that deal with simple harmonic motion. PHYS 121, PHYS 122, AMATH 251, AMATH 351 are only some of the courses that have covered this topic. It occurs so frequently in my AMATH courses that I thought it would very selfish of me to hord all the knowledge to myself.&lt;/p&gt;

&lt;p&gt;Simple harmonic motion is used to model periodic motion, motion that repeats itself after a set period of time. Some examples would be a spring or a pendulum. In applied mathematics there is an attraction to this subject as simple harmonic motion occurs all over the place. Starting off and understanding something simple as the pendulum, we can work on tackling more complicated problems.&lt;/p&gt;

&lt;p&gt;When we think about a simple pendulum, we think of a string attached to a pivot on one end and a heavy mass attached on the other $($assuming string has no mass$)$. Something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/pendulum.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since we are talking about applied mathematics here, then we need some sort of equation to work with. So how does one turn the pendulum motion into an equation?&lt;/p&gt;

&lt;p&gt;One thing we can start off with is the $F = ma$ equation $($Newton’s third law$)$. The $F$ is the net force and in our case will be the force acting on the mass hanging on to the string, $m$ the mass and $a$ the acceleration of the mass. Since we are dealing with the pendulum then what we will be using to keep track of position will be the angle $(&lt;script type=&quot;math/tex&quot;&gt;\theta&lt;/script&gt;)$ of the string from the pendulum’s equilibrium position. We now upgrade our image to the following:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/updated_pendulum.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To understand the net force on the mass, we need to consider all the forces acting on the mass. These forces will be gravity and tension of the string. By understanding the forces acting upon the mass we can then understand the motion induced by the forces:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/forces_pendulum.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The black force is caused by tension of the string and the blue force is caused by gravity. The gravity force can be broken down to the two red forces with the help of geometry. Since the mass on the string is not flying off the string then it must be the case that $F_g cos(\theta) = F_T$ and they cancel each other out. Therefore, the net force is $F = - mg sin(\theta)$.&lt;/p&gt;

&lt;p&gt;For the angle, $\theta$ is the angle, then velocity is $\theta’$ and acceleration is $\theta’’$. If we want to consider the amount of distance the mass on the pendulum covered with a change of $\theta$ in the angle, then the distance must be the arc length covered by the motion - which would be $\theta l$ where $l$ is the length of the string $($ if the pendulum was to do a full rotation, then that would be the circumference of a circle of radius - $l$, $2 \pi l$ $)$. Therefore the acceleration with respect to position $($not angle$)$ must be $l \theta’’$. Using all this information we can derive the following:&lt;/p&gt;

&lt;p&gt;$F = ma$&lt;/p&gt;

&lt;p&gt;$- m g sin(\theta) = m l \theta’’$&lt;/p&gt;

&lt;p&gt;$ - g sin(\theta) = l \theta’’$&lt;/p&gt;

&lt;p&gt;$ \theta’’ + \frac{g}{l}sin(\theta) = 0$&lt;/p&gt;

&lt;p&gt;What we have derived is a differential equation for the motion of the pendulum. There is some sort of function $\theta$ that describes the angle of the pendulum from equilibrium as a function of $t$, time. Now whatever that function may be, it must satisfy out derived differential equation. One thing we can observe from our equation is that it does not depend on mass $($ no matter what the mass is on the pendulum, the motion will not be changed $)$. We will now work on solving this equation.&lt;/p&gt;

&lt;p&gt;One way we can solve this differential equation is by getting rid of the $sin$. We can use the fact that for small $\theta$, $\theta ~= sin(\theta)$. This transforms our differential equation to: $\theta’’ + \frac{g}{l}\theta = 0$ for which the solution is of the form $\theta = A sin(\sqrt(\frac{g}{l}) + B cos(\sqrt(\frac{g}{l}))$ where $A$ and $B$ are constants.&lt;/p&gt;

&lt;p&gt;If we decide to solve the original equation with the $sin$ we might as well work on approximation techniques in order to save some time. One well known method is called the Euler method. In the Euler method we have an expression for the derivative of the form $y’ = f(t,y(t))$ and a starting point $y_0$ where $y(t_0) = y_0$. If we recall, $y’$ is the slope of the tangent of the curve $y$. Using the slope and the starting point $y_0$, we can approximate for the next value of the function, $y_1$ at $t = t_0+\delta t$ as  $y(t_0 + \delta t) = y_1 = y_0 + f(t_0,y_0)\delta t$. Here is a great image from Wikipedia to help visualize the explanation:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/euler_method.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Euler method can be extended to our differential equation as well. I employed the Euler method, the $sin$ approximation  as well as a different method called the RK4 ~ Runge-Kutta to the pendulum problem in order to help visualize the approximation techniques right over &lt;a href=&quot;http://localhost:4000/pendulum/simple_pendulum/index.html&quot;&gt;here&lt;/a&gt;. The RK4 is the most accurate, closely followed by the Euler and then finally the small $\theta$ approximation. You can play around with the initial conditions to see the differences in approximation. For the most part, the approximations match each other fairly well, but for some initial values they really differ $($ I recommend setting angle ~ 236, dtheta - 15, damping - 0, length - 150, gravity - 9.8 and selecting all the  approximation techniques$)$. The application also has the damping setting that you can play around with. I won’t say much about it as you can discover for yourself what it does.&lt;/p&gt;

&lt;p&gt;$($There is another part to the web app for the spring pendulum that I haven’t yet finished. It will be finished for another post.$)$&lt;/p&gt;

&lt;h2 id=&quot;automation&quot;&gt;Automation&lt;/h2&gt;

&lt;p&gt;Something neat I discovered a while back is Google App Scripts $($GAS$)$. As Google describes it, it is: “a JavaScript cloud scripting language that provides easy ways to automate tasks across Google products and third party services and build web applications.” Basically, GAS can be used to connect the different Google services $($like Google Sheets$)$ to your creativity with a little bit of scripting. You can use GAS for many many &lt;a href=&quot;http://www.labnol.org/internet/google-scripts/28281/&quot;&gt;things&lt;/a&gt;. One thing that we are going to build together today is a birthday email bot.&lt;/p&gt;

&lt;p&gt;The motivation behind this example is that it is a great introduction to GAS and a potential real world application. I noticed one of my friends on Facebook opening up one of those ‘3 friends have a birthday today’ notifications and then typing up a lame ‘Happy Birthday!’ to each person. It didn’t look like it was sincere and felt like a chore. Why not automate this?&lt;/p&gt;

&lt;p&gt;If you think that automating this sounds a little cheap then consider the fact that the amount of time you will spend creating the sender will put more thought and time in to those emails for years to come.&lt;/p&gt;

&lt;h3 id=&quot;setting-up&quot;&gt;Setting up&lt;/h3&gt;

&lt;p&gt;I will assume the reader has a Google account and is remotely familiar with Google Drive. You will need to create a new Google Sheet. In the Google sheet, fill it up in the following manner $($with the birthdays of people you know$)$:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/birthdays_sheet.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first row is for the column titles and the rest of the rows is for the data. The data in the rows does not have to be organized in any particular order.&lt;/p&gt;

&lt;p&gt;Once you have done that, go to &lt;em&gt;Tools &amp;gt; Script Editor…&lt;/em&gt; and enter the following code $($and then save it$)$.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;checkReminder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// get the spreadsheet object&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spreadsheet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SpreadsheetApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getActiveSpreadsheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// set the first sheet as active&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;SpreadsheetApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setActiveSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;spreadsheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSheets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// fetch this sheet&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sheet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spreadsheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getActiveSheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
   
  &lt;span class=&quot;c1&quot;&gt;// figure out what the last row is&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lastRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getLastRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 
  &lt;span class=&quot;c1&quot;&gt;// the rows are indexed starting at 1, and the first row&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// is the headers, so start with row 2&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;startRow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//get today's month and date&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getMonthAndDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dateData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//get tomorrows month and date&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;today&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomorrow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;tomorrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;today&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomorrowDateData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getMonthAndDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tomorrow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomorrowMonth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomorrowDateData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomorrowDay&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tomorrowDateData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
      
  
  &lt;span class=&quot;c1&quot;&gt;//get the data in the spreadsheet to loop over&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sheet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getRange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startRow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getNumRows&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  
  &lt;span class=&quot;c1&quot;&gt;//for all the rows with data&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;numRows&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//get the month and date&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//columns start indexing at zero unlike rows&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//if today's month and date matches the rows month and date ---&amp;gt; then it means it is the person's birthday&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//it is the person's birthday&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//Then shoot the person an email!&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;MailApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;your email in quotation marks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Happy Birthday EMAIL TITLE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;MAKE YOUR OWN BDAY BODY MESSAGE&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//if tomorrow is the row's date and month, then it means it is the person's birthday tomorrow ---&amp;gt; shoot yourself a warning message&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tomorrowMonth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tomorrowDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;MailApp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sendEmail&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;your email in quotation marks&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Birthday automation warning.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Birthday of &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; is tomorrow.&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;//for a given Date object return the Month and date&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getMonthAndDay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;January&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;February&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;March&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;April&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;May&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;June&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;July&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;August&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;September&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;October&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;November&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;December&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;month&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getMonth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()];&lt;/span&gt; 
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getDate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I have added comments throughout the code in order to help explain it. The code essentially checks the spreadsheet and checks if today’s date matches a date on the sheet. If there is a match then it sends the person a happy birthday email. If the person’s email is tomorrow then it sends you a warning in advance $($ in case you want to do something more than just an email $)$. $($If you have a friend who has a birthday on Feb 29 then you might have to do some extra thinking :$)$  $)$.&lt;/p&gt;

&lt;p&gt;Since we want to automate this process and have it run everyday then we still have some work to do. You need to go to &lt;em&gt;Resources &amp;gt; All your triggers&lt;/em&gt;, Add a new trigger and set it to Time-driven, Day timer between 7-8am and press save. Then go to &lt;em&gt;Publish &amp;gt; Deploy as Web App…&lt;/em&gt; and give the app the permissions it needs. There you go! You have created your very own birthday bot.&lt;/p&gt;

</description>
        <pubDate>Tue, 20 Dec 2016 16:27:00 -0800</pubDate>
        <link>http://localhost:4000/programming/2016/12/20/pendulum/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2016/12/20/pendulum/</guid>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Piano Robot</title>
        <description>&lt;p&gt;Back in September, I had the wonderful opportunity to participate in my first hackathon at Hack the North. It was nice to see so many enthusiastic people filled with ideas and talent all concentrated in one area. The keynote speaker: Vinod Khosla, presented his opinions and experiences that were inspiring to see. I especially enjoyed his views on focus and motivation from his life with which he achieved great success. A video of the interview is &lt;a href=&quot;https://www.youtube.com/watch?v=0FNsFPjdm5U&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;During the hackathon, I worked with Michael Li and Joe Seng. We decided to create something physical instead of an app. We wanted to create a robot that did something on its own without any assistance. We settled on the idea of building a robot that played on a piano. For the robot, we used a couple of sets of &lt;a href=&quot;https://en.wikipedia.org/wiki/Lego_Mindstorms&quot;&gt;lego mindstorm&lt;/a&gt; kits we had laying around.&lt;/p&gt;

&lt;p&gt;When we started the project we did not realize how difficult it would be to get the motions of the robot down. Having the robot press a single key with consistent results or even different keys were two problems that took hours to solve. Our lack of lego building skills came to light early on and gave us a little bit of frustration. However, there were tons of moments of laughter during our tests where the robot aggressively tried to press the keys and ended up spinning out of control.&lt;/p&gt;

&lt;p&gt;We imagined that most of the time in the project would be spent writing up the code for the robot to play different melodies, but that was not the case. The construction of the robot took up so much time that I can proudly say that I took part in the “don’t sleep” hackathon tradition.&lt;/p&gt;

&lt;p&gt;Here is a picture of our robot during construction:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://localhost:4000/assets/legoBot.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here is a &lt;a href=&quot;https://www.youtube.com/watch?v=er5BoZVnoGs&amp;amp;feature=youtu.be&quot;&gt;video&lt;/a&gt; of our robot in action.&lt;/p&gt;

&lt;p&gt;One thing I learned is that debugging robots is very different from debugging code and mainly in its difficulty. When testing your code you can ( and you SHOULD ) create test cases and run them through your code. Every time you modify your code, you can rerun your test cases to see if your code produces the correct output to the specified input. This process is (usually) straightforward to set up and to automate.&lt;/p&gt;

&lt;p&gt;In the case of a robot, you still have certain desired input-output sequences you are trying to achieve. However, you now have a lot more work in making sure your testing environment is consistent. The slightest change (as our group observed) can screw everything up. A slight shift of the robot’s position as a result of pressing piano keys in the previous test will make the same test’s rerun results completely different and unpredictable. Without the proper equipment/resources, achieving consistency is very difficult. I imagine that with the proper setup, the testing process for robots can be made to be similar to that of coding, but it would require a lot more effort in our case. (I do realize that this explanation is not completely bulletproof as code and their respective environments can get very complex as well - think concurrent and parallel programming for an example.)&lt;/p&gt;

&lt;p&gt;This was my brief story of making a piano playing robot. I used to play a lot on the piano when I was younger, so it was somewhat interesting automating tunes that I used to play as a kid. By making this connection to automation, I immediately thought back to the ideas Vinod Khosla presented on artificial intelligence. The thoughts were promising on the potential of technology and how it can change our future and many aspects of our life.&lt;/p&gt;

&lt;p&gt;At this moment, it is hard to predict or to fully appreciate how new technology will affect the future and our reaction to it. At least, in terms of robots and music, I think there is lots of room for creativity. However, with my past experience with music, I will still look for that human connection, effort and talent to fully enjoy and connect with music.&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Nov 2016 16:27:00 -0800</pubDate>
        <link>http://localhost:4000/programming/2016/11/19/piano-robot/</link>
        <guid isPermaLink="true">http://localhost:4000/programming/2016/11/19/piano-robot/</guid>
        
        
        <category>programming</category>
        
      </item>
    
  </channel>
</rss>
